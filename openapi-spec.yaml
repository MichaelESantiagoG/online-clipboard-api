openapi: 3.0.0
info:
  title: Clipboard API
  description: API for managing clipboard content and users
  version: 1.0.0

servers:
  - url: https://api.example.com
    description: Production server

components:
  schemas:
    Clip:
      type: object
      properties:
        clip_id:
          type: string
        content:
          type: string
          description: The clipboard content (max 1MB)
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        user_id:
          type: string
          nullable: true
    
    User:
      type: object
      properties:
        user_id:
          type: string
        username:
          type: string
          minLength: 3
        created_at:
          type: string
          format: date-time
    
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Unauthorized:
      description: Authentication failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

paths:
  /clip:
    post:
      summary: Create a new clipboard entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: The content to store
                expiration:
                  type: number
                  description: Hours until expiration
                  default: 24
                user_id:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Clip created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  clip_id:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    get:
      summary: Retrieve a clip by ID
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Clip retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clip'
        '404':
          $ref: '#/components/responses/NotFound'

  /user/clips:
    get:
      summary: Get all clips for a user
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of user's clips
          content:
            application/json:
              schema:
                type: object
                properties:
                  clips:
                    type: array
                    items:
                      $ref: '#/components/schemas/Clip'

  /user:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                password:
                  type: string
                  minLength: 8
                  format: password
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    get:
      summary: Get user information
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          $ref: '#/components/responses/NotFound'

  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'